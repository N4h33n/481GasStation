{"ast":null,"code":"var _jsxFileName = \"/Users/naheen/Desktop/CPSC481/481GasStation/src/BarGraph.js\";\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport { inventory } from './Variables';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = {\n  labels: inventory.map(item => item.name),\n  datasets: [{\n    label: 'Inventory Percentage',\n    backgroundColor: 'rgba(240, 0, 0, 0.3)',\n    borderColor: 'rgba(240, 0, 0, 1)',\n    borderWidth: 1,\n    hoverBackgroundColor: 'rgba(128, 128, 128, 0.5)',\n    data: inventory.map(item => item.qty / item.capacity * 100)\n  }]\n};\nconst options = {\n  indexAxis: 'y',\n  plugins: {\n    legend: {\n      display: false\n    }\n  }\n};\nconst customTooltip = tooltipModel => {\n  const dataIndex = tooltipModel.dataIndex;\n\n  // Check if inventory is defined and dataIndex is a valid index\n  if (inventory && dataIndex >= 0 && dataIndex < inventory.length) {\n    const item = inventory[dataIndex];\n    const tooltipText = `Qty: ${item.qty}, Capacity: ${item.capacity}`;\n    return tooltipText;\n  }\n\n  // Return an empty string or some default text if the data is not available\n  return '';\n};\nconst BarGraph = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      options: options,\n      data: data,\n      plugins: [{\n        afterDraw: customTooltip\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n};\n_c = BarGraph;\nexport default BarGraph;\nvar _c;\n$RefreshReg$(_c, \"BarGraph\");","map":{"version":3,"names":["React","Bar","Chart","inventory","jsxDEV","_jsxDEV","data","labels","map","item","name","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","qty","capacity","options","indexAxis","plugins","legend","display","customTooltip","tooltipModel","dataIndex","length","tooltipText","BarGraph","children","afterDraw","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/naheen/Desktop/CPSC481/481GasStation/src/BarGraph.js"],"sourcesContent":["import React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport { inventory } from './Variables'\n\nconst data = {\nlabels : inventory.map(item => item.name),\n\ndatasets : [\n{\n    label: 'Inventory Percentage',\n    backgroundColor: 'rgba(240, 0, 0, 0.3)',\n    borderColor: 'rgba(240, 0, 0, 1)',\n    borderWidth: 1,\n    hoverBackgroundColor: 'rgba(128, 128, 128, 0.5)',\n    data: inventory.map(item => (item.qty / item.capacity) * 100),\n  },\n],\n};\n\n const options = {\n    indexAxis: 'y',\n    plugins: {\n        legend: {\n          display: false\n        }\n    },\n};\n\nconst customTooltip = tooltipModel => {\n  const dataIndex = tooltipModel.dataIndex;\n\n  // Check if inventory is defined and dataIndex is a valid index\n  if (inventory && dataIndex >= 0 && dataIndex < inventory.length) {\n    const item = inventory[dataIndex];\n    const tooltipText = `Qty: ${item.qty}, Capacity: ${item.capacity}`;\n    return tooltipText;\n  }\n\n  // Return an empty string or some default text if the data is not available\n  return '';\n};\n\nconst BarGraph = () => {\n    return (\n      <div>\n        <Bar options={options} data={data} plugins={[{ afterDraw: customTooltip }]} />\n      </div>\n    );\n  };\n  \n  export default BarGraph;\n  \n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAOC,KAAK,MAAM,eAAe;AACjC,SAASC,SAAS,QAAQ,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,IAAI,GAAG;EACbC,MAAM,EAAGJ,SAAS,CAACK,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC;EAEzCC,QAAQ,EAAG,CACX;IACIC,KAAK,EAAE,sBAAsB;IAC7BC,eAAe,EAAE,sBAAsB;IACvCC,WAAW,EAAE,oBAAoB;IACjCC,WAAW,EAAE,CAAC;IACdC,oBAAoB,EAAE,0BAA0B;IAChDV,IAAI,EAAEH,SAAS,CAACK,GAAG,CAACC,IAAI,IAAKA,IAAI,CAACQ,GAAG,GAAGR,IAAI,CAACS,QAAQ,GAAI,GAAG;EAC9D,CAAC;AAEH,CAAC;AAEA,MAAMC,OAAO,GAAG;EACbC,SAAS,EAAE,GAAG;EACdC,OAAO,EAAE;IACLC,MAAM,EAAE;MACNC,OAAO,EAAE;IACX;EACJ;AACJ,CAAC;AAED,MAAMC,aAAa,GAAGC,YAAY,IAAI;EACpC,MAAMC,SAAS,GAAGD,YAAY,CAACC,SAAS;;EAExC;EACA,IAAIvB,SAAS,IAAIuB,SAAS,IAAI,CAAC,IAAIA,SAAS,GAAGvB,SAAS,CAACwB,MAAM,EAAE;IAC/D,MAAMlB,IAAI,GAAGN,SAAS,CAACuB,SAAS,CAAC;IACjC,MAAME,WAAW,GAAI,QAAOnB,IAAI,CAACQ,GAAI,eAAcR,IAAI,CAACS,QAAS,EAAC;IAClE,OAAOU,WAAW;EACpB;;EAEA;EACA,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnB,oBACExB,OAAA;IAAAyB,QAAA,eACEzB,OAAA,CAACJ,GAAG;MAACkB,OAAO,EAAEA,OAAQ;MAACb,IAAI,EAAEA,IAAK;MAACe,OAAO,EAAE,CAAC;QAAEU,SAAS,EAAEP;MAAc,CAAC;IAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3E,CAAC;AAEV,CAAC;AAACC,EAAA,GANEP,QAAQ;AAQZ,eAAeA,QAAQ;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}