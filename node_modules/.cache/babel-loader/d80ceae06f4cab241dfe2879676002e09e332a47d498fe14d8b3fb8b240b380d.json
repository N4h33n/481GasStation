{"ast":null,"code":"var _jsxFileName = \"/Users/naheen/Desktop/CPSC481/481GasStation/src/BarGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport { inventory } from './Variables';\nimport Sidebars from './Sidebars';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getColorForCategory = category => {\n  const categoryColors = {\n    chips: 'rgba(240, 0, 0, 0.3)',\n    drinks: 'rgba(0, 240, 0, 0.3)',\n    cookies: 'rgba(0, 0, 240, 0.3)',\n    candy: 'rgba(255, 165, 0, 0.3)',\n    misc: 'rgba(128, 128, 128, 0.3)'\n  };\n  return categoryColors[category] || 'rgba(0, 0, 0, 0.3)';\n};\nconst options = {\n  maintainAspectRatio: false,\n  indexAxis: 'y',\n  plugins: {\n    legend: {\n      display: false\n    },\n    tooltip: {\n      callbacks: {\n        label: context => {\n          const dataIndex = context.dataIndex;\n          if (inventory && dataIndex >= 0 && dataIndex < inventory.length) {\n            const item = inventory[dataIndex];\n            return `Category: ${item.category}, Qty: ${item.qty}, Capacity: ${item.capacity}`;\n          }\n          return 'error?';\n        }\n      }\n    }\n  },\n  scales: {\n    y: {\n      ticks: {\n        color: 'black',\n        font: {\n          size: 17\n        }\n      }\n    },\n    x: {\n      beginAtZero: true,\n      suggestedMax: 100,\n      ticks: {\n        color: 'black',\n        font: {\n          size: 17\n        }\n      }\n    }\n  }\n};\nconst BarGraph = () => {\n  _s();\n  const [chartData, setChartData] = useState({\n    labels: inventory.map(item => item.name.charAt(0).toUpperCase() + item.name.slice(1)),\n    datasets: [{\n      label: 'Inventory Percentage',\n      backgroundColor: inventory.map(item => getColorForCategory(item.category)),\n      borderColor: inventory.map(item => getColorForCategory(item.category).replace('0.3', '1')),\n      borderWidth: 1,\n      hoverBackgroundColor: inventory.map(item => getColorForCategory(item.category).replace('0.3', '0.5')),\n      data: inventory.map(item => item.qty / item.capacity * 100)\n    }]\n  });\n  const updateChart = () => {\n    setChartData({\n      ...chartData,\n      datasets: [{\n        ...chartData.datasets[0],\n        data: inventory.map(item => item.qty / item.capacity * 100)\n      }]\n    });\n  };\n  useEffect(() => {\n    updateChart();\n  }, [inventory]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Sidebars, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"corner\",\n      children: \"Inventory Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"InventoryBarGraph\",\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        options: options,\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"newGroup\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/Update_Inventory\",\n        className: \"dashboard-button\",\n        style: {\n          border: '2px solid black'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"dashboard-button\",\n          children: \"Update Inventory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 7\n  }, this);\n};\n_s(BarGraph, \"grXZsiyi+KrvBELMETPLlKqd0fQ=\");\n_c = BarGraph;\nexport default BarGraph;\nvar _c;\n$RefreshReg$(_c, \"BarGraph\");","map":{"version":3,"names":["React","useState","useEffect","Bar","Chart","inventory","Sidebars","Link","jsxDEV","_jsxDEV","getColorForCategory","category","categoryColors","chips","drinks","cookies","candy","misc","options","maintainAspectRatio","indexAxis","plugins","legend","display","tooltip","callbacks","label","context","dataIndex","length","item","qty","capacity","scales","y","ticks","color","font","size","x","beginAtZero","suggestedMax","BarGraph","_s","chartData","setChartData","labels","map","name","charAt","toUpperCase","slice","datasets","backgroundColor","borderColor","replace","borderWidth","hoverBackgroundColor","data","updateChart","children","fileName","_jsxFileName","lineNumber","columnNumber","className","to","style","border","_c","$RefreshReg$"],"sources":["/Users/naheen/Desktop/CPSC481/481GasStation/src/BarGraph.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport { inventory } from './Variables'\nimport Sidebars from './Sidebars';\nimport {Link} from 'react-router-dom';\n\nconst getColorForCategory = category => {\n\n  const categoryColors = {\n    chips: 'rgba(240, 0, 0, 0.3)',\n    drinks: 'rgba(0, 240, 0, 0.3)',\n    cookies: 'rgba(0, 0, 240, 0.3)',\n    candy: 'rgba(255, 165, 0, 0.3)',\n    misc: 'rgba(128, 128, 128, 0.3)',\n  };\n\n  return categoryColors[category] || 'rgba(0, 0, 0, 0.3)';\n};\n\n const options = {\n\tmaintainAspectRatio: false,\n    indexAxis: 'y',\n    plugins: {\n        legend: {\n          display: false\n        },\n        tooltip: {\n          callbacks: {\n            label: context => {\n              const dataIndex = context.dataIndex;\n              if (inventory && dataIndex >= 0 && dataIndex < inventory.length) {\n                const item = inventory[dataIndex];\n                return `Category: ${item.category}, Qty: ${item.qty}, Capacity: ${item.capacity}`;\n              }\n              return 'error?';\n            },\n          },\n        },\n    },\n    scales: {\n\t\ty:{\n\t\t\tticks:{\n\t\t\t\tcolor: 'black',\n\t\t\t\tfont:{\n\t\t\t\t\tsize: 17\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tx: {\n\t\t\tbeginAtZero: true,\n\t\t\tsuggestedMax: 100,\n\t\t\tticks:{\n\t\t\t\tcolor: 'black',\n\t\t\t\tfont:{\n\t\t\t\t\tsize: 17\n\t\t\t\t}\n\t\t\t}\n\t\t},\n    },\n};\n\n\nconst BarGraph = () => {\n\n  const [chartData, setChartData] = useState({\n    labels: inventory.map(item => item.name.charAt(0).toUpperCase() + item.name.slice(1)),\n    datasets: [\n      {\n        label: 'Inventory Percentage',\n        backgroundColor: inventory.map(item => getColorForCategory(item.category)),\n        borderColor: inventory.map(item => getColorForCategory(item.category).replace('0.3', '1')),\n        borderWidth: 1,\n        hoverBackgroundColor: inventory.map(item => getColorForCategory(item.category).replace('0.3', '0.5')),\n        data: inventory.map(item => (item.qty / item.capacity) * 100),\n      },\n    ],\n  });\n\n  const updateChart = () => {\n    setChartData({\n      ...chartData,\n      datasets: [\n        {\n          ...chartData.datasets[0],\n          data: inventory.map(item => (item.qty / item.capacity) * 100),\n        },\n      ],\n    });\n  };\n  \n  useEffect(() => {\n    updateChart();\n  }, [inventory]);\n\n    return (\n      <div>\n        <Sidebars />\n        \n        <div className=\"corner\">Inventory Management</div>\n  \n        <div className=\"InventoryBarGraph\">\n\t\t\t<Bar options={options} data={chartData} />\n\t\t</div>\n\n\t\t<div className=\"newGroup\">\n\t\t\t<Link to=\"/Update_Inventory\" className='dashboard-button' style={{border:'2px solid black'}}>\n\t\t\t\t<button className='dashboard-button'>Update Inventory</button>\n\t\t\t</Link>\n\t\t</div>\n \n      </div>\n    );\n  };\n  \n  export default BarGraph;\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}